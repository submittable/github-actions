#This template is used to call a reusable workflow. It runs the CI for the npm and then calls another workflow to dockerize the app
#You'll need to create a regular workflow and then create a new job name that calls the reusable workflow (ex. docker)
name: Reusable Workflow User

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - run: npm test
   
  #this is the syntax for the reusable workflow for dockerizing any application.
  #Notice that we passed the same secret name like we did when we created the reusable workflow
  #Also make sure to reference the version. Here we used the 'main' branch as the version.      
  docker:
      uses: jchima/node-js-getting-started/.github/workflows/dockerBuildandPush.yml@main
      with:
      #this is a variable configured within the called workflow. in this case the image_name will be the repo name
        image_name: ${{ github.repository }}
      secrets:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      