#This template is used to call a reusable workflow. It runs the CI for any repo and then calls another workflow to dockerize the app
#You'll need to create a regular workflow and then create a new job name that calls the reusable workflow (ex. docker)
name: Reusable Workflow User

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  #this is the syntax for the reusable workflow for dockerizing any application.
  #Notice that we passed the same secret name like we did when we created the reusable workflow
  #Also make sure to reference the version. Here we used the 'main' branch as the version.      
  docker-frontend:
      uses: submittable/github-actions/.github/workflows/reusable-docker.yml@main
      with:
      #this is a variable configured within the called workflow. in this case the image_name will be the repo name
        image_name: ${{ github.repository }}
        context: CHANGEME
      secrets:
#         GITHUB_TOKEN: ${{ secrets.token }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  #docker-backend:
      #uses: submittable/github-actions/.github/workflows/reusable-docker.yml@main
      #with:
      ###this is a variable configured within the called workflow. in this case the image_name will be the repo name
        #image_name: ${{ github.repository }}
        #context: CHANGEME
      #secrets:
        #GITHUB_TOKEN: ${{ secrets.token }}
        #SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      
