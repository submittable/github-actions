name: Image Release to AWS ECS

# Manual only pipeline
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice # TODO Experiment with use of type environment
        description: 'The ECS environment to deploy to'
        required: true
        options:
        - dev
        - staging
        - prod
      image_tag:
        type: string
        description: 'The Image tag to release.  See GHCR available images'
        default: 'release'
        required: true

# Call Re-usable deployment pipelines with proper inputs based on environment
jobs:
  development_deploy:
    uses: submittable/github-actions/.github/workflows/ecs_cd.yml@main
    if: ${{ github.event.inputs.environment == 'dev' }}
    with:
      repo_name: your-repo-name-here # Put repo name here
      environment: ${{ github.event.inputs.environment }}
      image_tag: ${{ github.event.inputs.image_tag }}
      aws_ecs_cluster_name: PUT_YOUR_CLUSTER_NAME_HERE # Put Relevant Infra String Here
      aws_ecs_service_name: PUT_YOUR_SERVICE_NAME_HERE # Put Relevant Infra String Here
      aws_ecs_task_file: dev-task-definition.json # Create this file in root directory from existing Task Def
      aws_ecs_container_name: PUT_CONTAINER_NAME_HERE
    secrets:
      SLACK_WEBHOOK: ${{ secrets.BUILDS_SLACK_WEBHOOK }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_ACCESS_KEY_ID }}
      AWS_ACCESS_KEY_SECRET: ${{ secrets.AWS_DEV_ACCESS_KEY_SECRET }}

  staging_deploy:
    uses: submittable/github-actions/.github/workflows/ecs_cd.yml@main
    if: ${{ github.event.inputs.environment == 'staging' }}
    with:
      repo_name: your-repo-name-here # Put repo name here
      environment: ${{ github.event.inputs.environment }}
      image_tag: ${{ github.event.inputs.image_tag }}
      aws_ecs_cluster_name: PUT_YOUR_CLUSTER_NAME_HERE # Put Relevant Infra String Here
      aws_ecs_service_name: PUT_YOUR_SERVICE_NAME_HERE # Put Relevant Infra String Here
      aws_ecs_task_file: staging-task-definition.json # Create this file in root directory from existing Task Def
      aws_ecs_container_name: PUT_CONTAINER_NAME_HERE
    secrets:
      SLACK_WEBHOOK: ${{ secrets.BUILDS_SLACK_WEBHOOK }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
      AWS_ACCESS_KEY_SECRET: ${{ secrets.AWS_STAGING_ACCESS_KEY_SECRET }}

  production_deploy:
    uses: submittable/github-actions/.github/workflows/ecs_cd.yml@main
    if: ${{ github.event.inputs.environment == 'prod' }}
    with:
      repo_name: your-repo-name-here # Put repo name here
      environment: ${{ github.event.inputs.environment }}
      image_tag: ${{ github.event.inputs.image_tag }}
      aws_ecs_cluster_name: PUT_YOUR_CLUSTER_NAME_HERE # Put Relevant Infra String Here
      aws_ecs_service_name: PUT_YOUR_SERVICE_NAME_HERE # Put Relevant Infra String Here
      aws_ecs_task_file: prod-task-definition.json # Create this file in root directory from existing Task Def
      aws_ecs_container_name: PUT_CONTAINER_NAME_HERE # Put Relevant Infra String Here
    secrets:
      SLACK_WEBHOOK: ${{ secrets.BUILDS_SLACK_WEBHOOK }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PROD_ACCESS_KEY_ID }}
      AWS_ACCESS_KEY_SECRET: ${{ secrets.AWS_PROD_ACCESS_KEY_SECRET }}